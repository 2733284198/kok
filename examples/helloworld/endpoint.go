// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package helloworld

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

type SayHelloRequest struct {
	Name string `json:"name"`
}

type SayHelloResponse struct {
	Message string `json:"message"`
	Err     error  `json:"-"`
}

func (r *SayHelloResponse) Body() interface{} { return r }

// Failed implements endpoint.Failer.
func (r *SayHelloResponse) Failed() error { return r.Err }

// MakeEndpointOfSayHello creates the endpoint for s.SayHello.
func MakeEndpointOfSayHello(s Service) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(*SayHelloRequest)
		message, err := s.SayHello(
			ctx,
			req.Name,
		)
		return &SayHelloResponse{
			Message: message,
			Err:     err,
		}, nil
	}
}
