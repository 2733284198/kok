codecs: "NewCodecs()"
tests:
  - name: 'PostProfile'
    cases:
      - name: 'ok'
        request:
          method: 'POST'
          path: '/profiles'
          body: '{"profile": {"id": "1234", "name": "kok"}}'
        wantIn: |
          profile: Profile{
            ID: "1234",
            Name: "kok",
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'POST'
          path: '/profiles'
          body: '{"profile": {"id": "1234", "name": "kok"}}'
        wantIn: |
          profile: Profile{
            ID: "1234",
            Name: "kok",
          },
        out: |
          err: ErrAlreadyExists,
        wantResponse:
          statusCode: 'http.StatusBadRequest'
          body: '`{"error":"already exists"}\n`'
  - name: 'GetProfile'
    cases:
      - name: 'ok'
        request:
          method: 'GET'
          path: '/profiles/1234'
        wantIn: |
          id: "1234",
        out: |
          profile: Profile{
            ID: "1234",
            Name: "kok",
          },
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{"profile":{"id":"1234","name":"kok"}}\n`'
      - name: 'err'
        request:
          method: 'GET'
          path: '/profiles/5678'
        wantIn: |
          id: "5678",
        out: |
          profile: Profile{},
          err: ErrNotFound,
        wantResponse:
          statusCode: 'http.StatusNotFound'
          body: '`{"error":"not found"}\n`'
  - name: 'PutProfile'
    cases:
      - name: 'ok'
        request:
          method: 'PUT'
          path: '/profiles/1234'
          body: '{"profile": {"id": "1234", "name": "kok", "addresses": [{"id": "0", "location": "here"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "1234",
            Name: "kok",
            Addresses: []Address{
              {
                ID:       "0",
                Location: "here",
              },
            },
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'PUT'
          path: '/profiles/1234'
          body: '{"profile": {"id": "5678", "name": "kok", "addresses": [{"id": "0", "location": "here"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "5678",
            Name: "kok",
            Addresses: []Address{
              {
                ID:       "0",
                Location: "here",
              },
            },
          },
        out: |
          err: ErrInconsistentIDs,
        wantResponse:
          statusCode: 'http.StatusBadRequest'
          body: '`{"error":"inconsistent IDs"}\n`'
  - name: 'PatchProfile'
    cases:
      - name: 'ok'
        request:
          method: 'PATCH'
          path: '/profiles/1234'
          body: '{"profile": {"id": "1234", "name": "kok", "addresses": [{"id": "?", "location": "where"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "1234",
            Name: "kok",
            Addresses: []Address{
              {
                ID:       "?",
                Location: "where",
              },
            },
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'PATCH'
          path: '/profiles/1234'
          body: '{"profile": {"id": "5678", "name": "wow"}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "5678",
            Name: "wow",
          },
        out: |
          err: ErrInconsistentIDs,
        wantResponse:
          statusCode: 'http.StatusBadRequest'
          body: '`{"error":"inconsistent IDs"}\n`'
  - name: 'DeleteProfile'
    cases:
      - name: 'ok'
        request:
          method: 'DELETE'
          path: '/profiles/1234'
        wantIn: |
          id: "1234",
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'DELETE'
          path: '/profiles/5678'
        wantIn: |
          id: "5678",
        out: |
          err: ErrNotFound,
        wantResponse:
          statusCode: 'http.StatusNotFound'
          body: '`{"error":"not found"}\n`'
  - name: 'GetAddresses'
    cases:
      - name: 'ok'
        request:
          method: 'GET'
          path: '/profiles/1234/addresses'
        wantIn: |
          id: "1234",
        out: |
          addresses: []Address{
            {
              ID:       "0",
              Location: "here",
            },
          },
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{"addresses":[{"id":"0","location":"here"}]}\n`'
      - name: 'empty'
        request:
          method: 'GET'
          path: '/profiles/5678/addresses'
        wantIn: |
          id: "5678",
        out: |
          addresses: []Address{},
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{"addresses":[]}\n`'
  - name: 'GetAddress'
    cases:
      - name: 'ok'
        request:
          method: 'GET'
          path: '/profiles/1234/addresses/0'
        wantIn: |
          id: "1234",
          addressID: "0",
        out: |
          address: Address{
            ID:       "0",
            Location: "here",
          },
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{"address":{"id":"0","location":"here"}}\n`'
      - name: 'err'
        request:
          method: 'GET'
          path: '/profiles/1234/addresses/9'
        wantIn: |
          id: "1234",
          addressID: "9",
        out: |
          address: Address{},
          err: ErrNotFound,
        wantResponse:
          statusCode: 'http.StatusNotFound'
          body: '`{"error":"not found"}\n`'
  - name: 'PostAddress'
    cases:
      - name: 'ok'
        request:
          method: 'POST'
          path: '/profiles/1234/addresses'
          body: '{"address": {"id": "0", "location": "here"}}'
        wantIn: |
          id: "1234",
          address: Address{
            ID:       "0",
            Location: "here",
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'POST'
          path: '/profiles/1234/addresses'
          body: '{"address": {"id": "0", "location": "here"}}'
        wantIn: |
          id: "1234",
          address: Address{
            ID:       "0",
            Location: "here",
          },
        out: |
          err: ErrAlreadyExists,
        wantResponse:
          statusCode: 'http.StatusBadRequest'
          body: '`{"error":"already exists"}\n`'
  - name: 'DeleteAddress'
    cases:
      - name: 'ok'
        request:
          method: 'DELETE'
          path: '/profiles/1234/addresses/0'
        wantIn: |
          id: "1234",
          addressID: "0",
        out: |
          err: nil,
        wantResponse:
          statusCode: 'http.StatusOK'
          body: '`{}\n`'
      - name: 'err'
        request:
          method: 'DELETE'
          path: '/profiles/1234/addresses/9'
        wantIn: |
          id: "1234",
          addressID: "9",
        out: |
          err: ErrNotFound,
        wantResponse:
          statusCode: 'http.StatusNotFound'
          body: '`{"error":"not found"}\n`'
